const chalk = require("chalk");

module.exports = {
    name: "tagall",
    execute: async (sock, msg, args) => {
        const groupId = msg.key.remoteJid;

        // ‚úÖ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá
        if (!groupId.endsWith('@g.us')) {
            await sock.sendMessage(groupId, { text: '‚ùå ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá!' });
            return;
        }

        try {
            console.log(chalk.yellowBright('üîç Fetching group members...'));

            const groupMetadata = await sock.groupMetadata(groupId);
            const participants = groupMetadata.participants.map(p => p.id);

            if (participants.length === 0) {
                await sock.sendMessage(groupId, { text: "‚ùå ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø!" });
                return;
            }

            let tagMessage = `TAG ALL BYE RTX-DIP @919907298153 üë• **Group Members (${participants.length})**\n\n`;

            participants.forEach((id, index) => {
                tagMessage += `${index + 1}. @${id.split('@')[0]}\n`;
            });

            await sock.sendMessage(groupId, {
                text: tagMessage,
                mentions: participants
            });

            console.log(chalk.blueBright(`‚úÖ Tagged ${participants.length} members in group ${groupId}`));
        } catch (error) {
            console.error(chalk.red('‚ùå Error fetching group metadata:'), error);
            await sock.sendMessage(groupId, { text: '‚ùå ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!' });
        }
    }
};